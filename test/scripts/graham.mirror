# ["right"]

World mirrorInto: "Point".
World mirrorInto: "Graham".

Point set: "x" to: 0.
Point set: "y" to: 0.

Point set: "crossProductWith:and:" to: [ pa pb |
  ((pa x - x) * (pb y - y)) -  ((pb x - x) * (pa y - y)).
].

Point set: "distanceFrom:" to: [ p |
  (((x - p x) ** 2) + ((y - p y) ** 2)) sqrt.
].

Point set: "compareCrossProductWith:and:" to: [ pa pb : angle distance |
  angle: ((crossProductWith: pa and: pb) compareTo: 0).
  distance: ((distanceFrom: pa) compareTo: (distanceFrom: pb)).
  angle == "eq"
    ifTrue: [ distance. ]
    ifFalse: [ angle. ].
].

Graham set: "directionFrom:to:and:" to: [ pa pb pc : cp |
	cp: (pa crossProductWith: pb and: pc).
	cp > 0
		ifTrue: [ "right". ]
		ifFalse: [
			cp < 0
				ifTrue: [ "left". ]
				ifFalse: [ "straight". ].
		].
].

Point mirrorInto: "pa" with: [ x: 1. y: 1. ].
Point mirrorInto: "pb" with: [ x: 3. y: 5. ].
Point mirrorInto: "pc" with: [ x: 1. y: 2. ].

(World offload: (Graham directionFrom: pa to: pb and: pc)) transcribeAndBreak.